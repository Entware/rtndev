--- a/lib/unix-lpr.sh
+++ b/lib/unix-lpr.sh
@@ -19,16 +19,16 @@
 # executable name set in the makefile
 GS_EXECUTABLE=gs
 
-PBMPLUSPATH=/usr/local/bin
-PSFILTERPATH=/usr/local/lib/ghostscript
-LOCALPATH=/usr/local/bin
-X11HOME=/usr/X11R6
+PBMPLUSPATH=/opt/bin
+PSFILTERPATH=/opt/lib/ghostscript
+LOCALPATH=/opt/bin
+X11HOME=/opt/usr/X11R6
 
 PATH=/bin:/usr/bin:/usr/ucb:/usr/etc
 PATH=${PATH}\:${LOCALPATH}\:${PBMPLUSPATH}\:${PSFILTERPATH}
-LD_LIBRARY_PATH=${X11HOME}/lib
+#LD_LIBRARY_PATH=${X11HOME}/lib
 
-export PATH LD_LIBRARY_PATH acctfile host user
+#export PATH LD_LIBRARY_PATH acctfile host user
 
 user= host= acctfile=/dev/null
 
--- a/lib/lprsetup.sh
+++ b/lib/lprsetup.sh
@@ -14,7 +14,7 @@ do
             "usage: $0 [-p <gs install prefix>]\n"\
             "Where <gs install prefix> is the ""prefix""\n"\
             "for the Ghostscript install - the default is\n"\
-            """/usr/local"""
+            """/opt"""
             exit 1;;
 	-*) echo >&2 \
 	    "usage: $0 [-p <gs install prefix>]"
@@ -33,14 +33,10 @@ PRINTERDEV=/dev/lp1
 # The kind of printer (accepted values: 'parallel' and 'serial')
 PRINTERTYPE=parallel
 
-if [ "x$GSPATH"="x" ] ; then
-  GSDIR=`which gs | awk -F / 'sub(FS $NF,x)' | awk -F / 'sub(FS $NF,x)'`/lib/ghostscript
-else
-  GSDIR=$GSPATH
-fi
+GSDIR=/opt/lib/ghostscript
 
 GSFILTERDIR=$GSDIR/filt
-SPOOLDIR=/var/spool
+SPOOLDIR=/opt/var/spool
 GSIF=unix-lpr.sh
 PCAP=printcap.insert
 
@@ -55,9 +51,6 @@ if [ "x$GSPATH"="x" ] ; then
   echo
 fi
 
-PATH=/bin:/usr/bin:/usr/ucb
-export PATH
-
 if [ ! -w $GSDIR ]; then
   echo "$GSDIR must be writable to create filter directory"
   exit 1
--- a/configure.ac
+++ b/configure.ac
@@ -1806,12 +1806,6 @@ if ( test -f $srcdir/cups/gdevcups.c );
         if test x$with_local_cups != xyes; then
             if test x"$CUPSCONFIG" = x""; then
               AC_PATH_TOOL(CUPSCONFIG,cups-config)
-              if test x"$build" != x"$host"; then
-                AC_PATH_PROG(BUILD_CUPSCONFIG, cups-config)
-                if test x"$BUILD_CUPSCONFIG" = x"$CUPSCONFIG" ; then
-                  CUPSCONFIG=
-                fi
-              fi
             else
 #             We were given a cups-config on the command line, assume the user intends to
 #             include cups, and make not finding a hard fail.
@@ -2565,14 +2559,14 @@ PDF_MAK="\$(GLSRCDIR)\$(D)stub.mak"
 PDFROMFS_MAK="\$(GLSRCDIR)\$(D)stub.mak"
 
 if test x"$with_pdf" != x"no" -a x"$enable_auxtools_only" != x"yes" ; then
-
+ if test x"$build" != x"$host"; then
   if test x"$JBIG2_DECODER" = x""; then
       AC_MSG_ERROR([No JBIG2 decoder available, required for PDF support])
   fi
   if test x"$JPX_DECODER" = x""; then
       AC_MSG_ERROR([No JPX/JPEG2000 decoder available, required for PDF support])
   fi
-
+ fi
   if test -f $srcdir/pdf/pdf.mak; then
     AC_ARG_WITH([pdf], AS_HELP_STRING([--with-pdf=NAME],
         [name of the Ghostpdf executible (if the source is available, ignored otherwise) [[gpdf]]]),
