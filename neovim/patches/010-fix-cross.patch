--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -235,7 +235,7 @@ set(STYLUA_DIRS runtime scripts src test
 
 add_glob_target(
   TARGET lintlua-luacheck
-  COMMAND $<TARGET_FILE:nvim_bin>
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim
   FLAGS -ll ${PROJECT_SOURCE_DIR}/test/lua_runner.lua ${CMAKE_BINARY_DIR}/usr luacheck -q
   GLOB_DIRS runtime scripts src test
   GLOB_PAT *.lua
@@ -262,7 +262,7 @@ add_glob_target(
   TOUCH_STRATEGY PER_DIR)
 
 add_custom_target(lintcommit
-  COMMAND $<TARGET_FILE:nvim_bin> -u NONE -l ${PROJECT_SOURCE_DIR}/scripts/lintcommit.lua main)
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -l ${PROJECT_SOURCE_DIR}/scripts/lintcommit.lua main)
 add_dependencies(lintcommit nvim_bin)
 
 add_custom_target(lint)
--- a/runtime/CMakeLists.txt
+++ b/runtime/CMakeLists.txt
@@ -33,7 +33,7 @@ foreach(PACKAGE ${PACKAGES})
     add_custom_command(OUTPUT "${GENERATED_PACKAGE_DIR}/${PACKNAME}/doc/tags"
       COMMAND ${CMAKE_COMMAND} -E copy_directory
         ${PACKAGE} ${GENERATED_PACKAGE_DIR}/${PACKNAME}
-      COMMAND $<TARGET_FILE:nvim_bin>
+      COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim
         -u NONE -i NONE -e --headless -c "helptags doc" -c quit
       DEPENDS
         nvim_bin
@@ -65,7 +65,7 @@ add_custom_command(OUTPUT ${GENERATED_HE
   COMMAND ${CMAKE_COMMAND} -E remove_directory doc
   COMMAND ${CMAKE_COMMAND} -E copy_directory
     ${PROJECT_SOURCE_DIR}/runtime/doc doc
-  COMMAND $<TARGET_FILE:nvim_bin>
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim
     -u NONE -i NONE -e --headless -c "helptags ++t doc" -c quit
   DEPENDS
     nvim_bin
--- a/src/nvim/CMakeLists.txt
+++ b/src/nvim/CMakeLists.txt
@@ -519,7 +519,7 @@ set(LUA_GEN ${LUA_GEN_PRG} ${GENERATOR_P
 set(LUA_GEN_DEPS ${GENERATOR_PRELOAD} $<TARGET_FILE:nlua0>)
 
 # Like LUA_GEN but includes also vim.fn, vim.api, vim.uv, etc
-set(NVIM_LUA $<TARGET_FILE:nvim_bin> -u NONE -l ${NVIM_LUA_PRELOAD} ${PROJECT_SOURCE_DIR})
+set(NVIM_LUA ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -l ${NVIM_LUA_PRELOAD} ${PROJECT_SOURCE_DIR})
 
 # NVIM_GENERATED_FOR_HEADERS: generated headers to be included in headers
 # NVIM_GENERATED_FOR_SOURCES: generated headers to be included in sources
--- a/src/nvim/po/CMakeLists.txt
+++ b/src/nvim/po/CMakeLists.txt
@@ -55,14 +55,14 @@ if(HAVE_WORKING_LIBINTL AND GETTEXT_FOUN
   list(SORT NVIM_RELATIVE_SOURCES)
   add_custom_command(
     OUTPUT ${NVIM_POT}
-    COMMAND $<TARGET_FILE:nvim_bin> -u NONE -i NONE -n --headless --cmd "set cpo+=+"
+    COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -i NONE -n --headless --cmd "set cpo+=+"
       -c "silent source ${CMAKE_CURRENT_SOURCE_DIR}/tojavascript.vim"
       ${NVIM_POT} ${PROJECT_SOURCE_DIR}/runtime/optwin.vim
     COMMAND ${XGETTEXT_PRG} -o ${NVIM_POT} --default-domain=nvim
       --add-comments --keyword=_ --keyword=N_ --keyword=NGETTEXT:1,2
       -D ${CMAKE_CURRENT_SOURCE_DIR} -D ${CMAKE_CURRENT_BINARY_DIR}
       ${NVIM_RELATIVE_SOURCES} optwin.js
-    COMMAND $<TARGET_FILE:nvim_bin> -u NONE -i NONE -n --headless --cmd "set cpo+=+"
+    COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -i NONE -n --headless --cmd "set cpo+=+"
       -c "silent source ${CMAKE_CURRENT_SOURCE_DIR}/fixfilenames.vim"
       ${NVIM_POT} ${PROJECT_SOURCE_DIR}/runtime/optwin.vim
     VERBATIM
@@ -92,7 +92,7 @@ if(HAVE_WORKING_LIBINTL AND GETTEXT_FOUN
     set(poFile ${CMAKE_CURRENT_SOURCE_DIR}/${name}.po)
 
     add_custom_target(check-po-${name}
-      COMMAND $<TARGET_FILE:nvim_bin> -u NONE -n -e
+      COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -n -e
           -S ${CMAKE_CURRENT_SOURCE_DIR}/check.vim
           -c "if error == 0 | q | endif" -c cq ${poFile} ||
           ${CMAKE_COMMAND} -E echo "${name}.po failed the check."
