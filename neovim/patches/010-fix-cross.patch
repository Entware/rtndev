--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -236,7 +236,7 @@ add_glob_target(
   TARGET lintlua-luacheck
   COMMAND ${LUACHECK_PRG}
   FLAGS -q
-  GLOB_DIRS runtime/ scripts/ src/ test/
+  GLOB_DIRS runtime/ scripts/ src/
   GLOB_PAT *.lua
   TOUCH_STRATEGY SINGLE)
 
@@ -262,7 +262,6 @@ add_glob_target(
   TOUCH_STRATEGY SINGLE)
 
 add_custom_target(lintcommit
-  COMMAND ${PROJECT_BINARY_DIR}/bin/nvim -u NONE -es -c [[lua require('scripts.lintcommit').main({trace=false})]]
   WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
   VERBATIM)
 add_dependencies(lintcommit nvim)
--- a/runtime/CMakeLists.txt
+++ b/runtime/CMakeLists.txt
@@ -32,8 +32,7 @@ foreach(PACKAGE ${PACKAGES})
     add_custom_command(OUTPUT "${GENERATED_PACKAGE_DIR}/${PACKNAME}/doc/tags"
       COMMAND ${CMAKE_COMMAND} -E copy_directory
         ${PACKAGE} ${GENERATED_PACKAGE_DIR}/${PACKNAME}
-      COMMAND "${PROJECT_BINARY_DIR}/bin/nvim"
-        -u NONE -i NONE -e --headless -c "helptags doc" -c quit
+      COMMAND touch "${GENERATED_PACKAGE_DIR}/${PACKNAME}/doc/tags"
       DEPENDS
         nvim
         nvim_runtime_deps
@@ -66,8 +65,6 @@ add_custom_command(OUTPUT ${GENERATED_HE
   COMMAND ${CMAKE_COMMAND} -E remove_directory doc
   COMMAND ${CMAKE_COMMAND} -E copy_directory
     ${PROJECT_SOURCE_DIR}/runtime/doc doc
-  COMMAND "${PROJECT_BINARY_DIR}/bin/nvim"
-    -u NONE -i NONE -e --headless -c "helptags ++t doc" -c quit
   DEPENDS
     nvim
     nvim_runtime_deps
@@ -77,8 +74,6 @@ add_custom_command(OUTPUT ${GENERATED_HE
 
 # TODO: This doesn't work. wait for "nvim -l" to land?
 add_custom_target(doc_html
-  COMMAND "${PROJECT_BINARY_DIR}/bin/nvim"
-    -V1 -es --clean -c "lua require('scripts.gen_help_html').gen('./build/runtime/doc', './build/doc_html', nil, 'todo_commit_id')" -c "0cq"
   DEPENDS
     ${GENERATED_HELP_TAGS}
   WORKING_DIRECTORY "${GENERATED_RUNTIME_DIR}/doc"
--- a/src/nvim/CMakeLists.txt
+++ b/src/nvim/CMakeLists.txt
@@ -888,4 +888,4 @@ add_custom_target(generated-sources DEPE
   ${NVIM_GENERATED_SOURCES}
 )
 
-add_subdirectory(po)
+#add_subdirectory(po)
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -1,4 +1,4 @@
-add_subdirectory(functional/fixtures)  # compile test programs
+#add_subdirectory(functional/fixtures)  # compile test programs
 get_directory_property(GENERATED_HELP_TAGS DIRECTORY ${PROJECT_SOURCE_DIR}/runtime DEFINITION GENERATED_HELP_TAGS)
 
 if(NOT BUSTED_OUTPUT_TYPE)
