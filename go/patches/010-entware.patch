--- a/src/crypto/x509/root_linux.go
+++ b/src/crypto/x509/root_linux.go
@@ -6,6 +6,7 @@ package x509
 
 // Possible certificate files; stop after finding one.
 var certFiles = []string{
+	"/opt/etc/ssl/certs/ca-certificates.crt",            // Entware
 	"/etc/ssl/certs/ca-certificates.crt",                // Debian/Ubuntu/Gentoo etc.
 	"/etc/pki/tls/certs/ca-bundle.crt",                  // Fedora/RHEL 6
 	"/etc/ssl/ca-bundle.pem",                            // OpenSUSE
@@ -16,6 +17,7 @@ var certFiles = []string{
 
 // Possible directories with certificate files; all will be read.
 var certDirectories = []string{
+	"/opt/etc/ssl/certs",           // Entware
 	"/etc/ssl/certs",               // SLES10/SLES11, https://golang.org/issue/12139
 	"/etc/pki/tls/certs",           // Fedora/RHEL
 	"/system/etc/security/cacerts", // Android
--- a/src/time/zoneinfo_unix.go
+++ b/src/time/zoneinfo_unix.go
@@ -18,6 +18,7 @@ import (
 // Many systems use /usr/share/zoneinfo, Solaris 2 has
 // /usr/share/lib/zoneinfo, IRIX 6 has /usr/lib/locale/TZ.
 var platformZoneSources = []string{
+	"/opt/share/zoneinfo/",		// Entware
 	"/usr/share/zoneinfo/",
 	"/usr/share/lib/zoneinfo/",
 	"/usr/lib/locale/TZ/",
@@ -34,7 +35,7 @@ func initLocal() {
 	tz, ok := syscall.Getenv("TZ")
 	switch {
 	case !ok:
-		z, err := loadLocation("localtime", []string{"/etc"})
+		z, err := loadLocation("localtime", []string{"/opt/etc"})
 		if err == nil {
 			localLoc = *z
 			localLoc.name = "Local"
@@ -47,7 +48,7 @@ func initLocal() {
 		if tz != "" && tz[0] == '/' {
 			if z, err := loadLocation(tz, []string{""}); err == nil {
 				localLoc = *z
-				if tz == "/etc/localtime" {
+				if tz == "/opt/etc/localtime" {
 					localLoc.name = "Local"
 				} else {
 					localLoc.name = tz
--- a/scr/net/nss.go
+++ b/src/net/nss.go
@@ -13,7 +13,7 @@
 )
 
 const (
-	nssConfigPath = "/etc/nsswitch.conf"
+	nssConfigPath = "/opt/etc/nsswitch.conf"
 )
 
 var nssConfig nsswitchConfig
@@ -40,7 +40,7 @@
 
 // init initializes conf and is only called via conf.initOnce.
 func (conf *nsswitchConfig) init() {
-	conf.nssConf = parseNSSConfFile("/etc/nsswitch.conf")
+	conf.nssConf = parseNSSConfFile("/opt/etc/nsswitch.conf")
 	conf.lastChecked = time.Now()
 	conf.ch = make(chan struct{}, 1)
 }
