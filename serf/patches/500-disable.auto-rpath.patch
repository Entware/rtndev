--- a/SConstruct
+++ b/SConstruct
@@ -68,7 +68,7 @@ if sys.platform == 'win32':
   default_libdir='..'
   default_prefix='Debug'
 else:
-  default_incdir='/usr'
+  default_incdir='@STAGING_DIR@'
   default_libdir='$PREFIX/lib'
   default_prefix='/usr/local'
 
@@ -233,9 +233,6 @@ if sys.platform != 'win32':
 else:
   LIBNAMESTATIC = 'serf-${MAJOR}'
 
-env.Append(RPATH=libdir,
-           PDB='${TARGET.filebase}.pdb')
-
 if sys.platform == 'darwin':
 #  linkflags.append('-Wl,-install_name,@executable_path/%s.dylib' % (LIBNAME,))
   env.Append(LINKFLAGS=['-Wl,-install_name,%s/%s.dylib' % (thisdir, LIBNAME,)])
@@ -407,19 +404,12 @@ if gssapi and CALLOUT_OKAY:
 if sys.platform == 'win32':
   env.Append(CPPDEFINES=['SERF_HAVE_SSPI'])
 
-# On some systems, the -R values that APR describes never make it into actual
-# RPATH flags. We'll manually map all directories in LIBPATH into new
-# flags to set RPATH values.
-for d in env['LIBPATH']:
-  env.Append(RPATH=':'+d)
-
 # Set up the construction of serf-*.pc
 pkgconfig = env.Textfile('serf-%d.pc' % (MAJOR,),
                          env.File('build/serf.pc.in'),
                          SUBST_DICT = {
                            '@MAJOR@': str(MAJOR),
                            '@PREFIX@': '$PREFIX',
-                           '@LIBDIR@': '$LIBDIR',
                            '@INCLUDE_SUBDIR@': 'serf-%d' % (MAJOR,),
                            '@VERSION@': '%d.%d.%d' % (MAJOR, MINOR, PATCH),
                            '@LIBS@': '%s %s %s -lz' % (apu_libs, apr_libs,
@@ -483,7 +473,6 @@ else:
   TEST_EXES = [ os.path.join('test', '%s' % (prog)) for prog in TEST_PROGRAMS ]
 
 # Find the (dynamic) library in this directory
-tenv.Replace(RPATH=thisdir)
 tenv.Prepend(LIBS=[LIBNAMESTATIC, ],
              LIBPATH=[thisdir, ])
 
--- a/build/serf.pc.in
+++ b/build/serf.pc.in
@@ -1,7 +1,7 @@
 SERF_MAJOR_VERSION=@MAJOR@
 prefix=@PREFIX@
 exec_prefix=${prefix}
-libdir=@LIBDIR@
+libdir=${exec_prefix}/lib
 includedir=${prefix}/include/@INCLUDE_SUBDIR@
 
 Name: serf
