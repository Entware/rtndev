--- a/Makefile
+++ b/Makefile
@@ -1,12 +1,12 @@
 # Makefile for dungeon
 
-CC = gcc
+CC ?= gcc
 BUILD ?= release
 # Where to install the program
-BINDIR = /usr/games
+BINDIR = /opt
 
 # Where to install the data file
-LIBDIR = /usr/games/lib
+LIBDIR = /opt/share/zork
 
 # The dungeon program provides a ``more'' facility which tries to
 # figure out how many rows the terminal has.  Several mechanisms are
@@ -18,8 +18,8 @@
 # variable may need to be set to -lcurses.  On some it may need to
 # be /usr/lib/termcap.o.  These options are commented out below.
 # LIBS = -ltermcap
-TERMFLAG =
-LIBS = -lcurses
+#TERMFLAG =
+#LIBS = -lcurses
 # LIBS = /usr/lib/termcap.o
 
 # more option 2: use the terminfo routines.  On some systems the LIBS
@@ -29,8 +29,8 @@
 # TERMFLAG = -DMORE_TERMINFO
 
 # more option 3: assume all terminals have 24 rows
-# LIBS =
-# TERMFLAG = -DMORE_24
+LIBS =
+TERMFLAG = -DMORE_24
 
 # more option 4: don't use the more facility at all
 # LIBS =
@@ -43,7 +43,7 @@
 # Although a K&R compiler is somewhat difficult to come by these days,
 # we can make GCC enforce ANSI C, which is pretty close.
 # If you aren't building with GCC, comment the next line out.
-CFLAGS = -std=iso9899:1990 -pedantic
+CFLAGS ?= -std=iso9899:1990 -pedantic
 
 CFLAGS += -Wall -Werror -Wextra
 # Compilation flags
@@ -87,7 +87,7 @@
 	rm -f $(OBJS) dungeon dtextc.dat core dsave.dat *~
 
 dtextc.dat:
-	cat dtextc.uu1 dtextc.uu2 dtextc.uu3 dtextc.uu4 | uudecode
+	cat dtextc.uu1 dtextc.uu2 dtextc.uu3 dtextc.uu4 | ./uudecode
 
 dinit.o: dinit.c funcs.h vars.h
 	$(CC) $(CFLAGS) $(GDTFLAG) -DTEXTFILE=\"$(LIBDIR)/dtextc.dat\" -c dinit.c
