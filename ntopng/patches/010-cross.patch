--- a/configure.ac.in
+++ b/configure.ac.in
@@ -106,7 +106,7 @@ fi
 CFLAGS="${CFLAGS} -I${HERE} -I${HERE}/include"
 CXXFLAGS="${CXXFLAGS} -I${HERE} -I${HERE}/include"
 
-CXXFLAGS="${CXXFLAGS} -Wno-address-of-packed-member -Wno-unused-function"
+CXXFLAGS="${CXXFLAGS} -Wno-unused-function"
 
 dnl> MacOS brew.sh
 HOMEBREW_DIR=/opt/homebrew
@@ -233,23 +233,23 @@ if test "${with_nedge+set}" = set; then
   LIBS="${LIBS} -lnetfilter_queue -lnfnetlink -lnetfilter_conntrack"
 fi
 
-if test -d "/usr/local/include"; then
-  CFLAGS="${CFLAGS} -I/usr/local/include"
-  CXXFLAGS="${CXXFLAGS} -I/usr/local/include"
-fi
-
-if test -d "/usr/local/lib"; then
-  LIBS="${LIBS} -L/usr/local/lib"
-fi
-
-if test -d /opt/local/include; then :
-  CFLAGS="${CFLAGS} -I/opt/local/include"
-  CXXFLAGS="${CXXFLAGS} -I/opt/local/include"
-fi
-
-if test -d /opt/local/lib; then :
-  LIBS="${LIBS} -L/opt/local/lib"
-fi
+#if test -d "/usr/local/include"; then
+#  CFLAGS="${CFLAGS} -I/usr/local/include"
+#  CXXFLAGS="${CXXFLAGS} -I/usr/local/include"
+#fi
+
+#if test -d "/usr/local/lib"; then
+#  LIBS="${LIBS} -L/usr/local/lib"
+#fi
+
+#if test -d /opt/local/include; then :
+#  CFLAGS="${CFLAGS} -I/opt/local/include"
+#  CXXFLAGS="${CXXFLAGS} -I/opt/local/include"
+#fi
+
+#if test -d /opt/local/lib; then :
+#  LIBS="${LIBS} -L/opt/local/lib"
+#fi
 
 if [ test -f /usr/bin/lsb_release ]; then
   CODENAME=`/usr/bin/lsb_release -c|cut -f 2`
@@ -377,7 +377,7 @@ fi
 pkg-config --exists libssl
 if test "$?" -ne 1; then
   AC_DEFINE_UNQUOTED(NO_SSL_DL, 1, [has openssl])
-  SSL_INC="`pkg-config --cflags libssl` -I/usr/include/openssl"
+  SSL_INC="`pkg-config --cflags libssl`"
   SSL_LIB="`pkg-config --libs libssl` -lssl -lcrypto"
 else
   dnl Workaround for MacOS Brew
@@ -538,13 +538,13 @@ AC_CHECK_LIB(resolv, inet_aton)
 HIREDIS_INC=
 HIREDIS_LIB=
 AS_VAR_IF(with_hiredis, yes, [
-    if test -f "${HOME}/hiredis/libhiredis.a" ; then :
-      HIREDIS_INC="-I${HOME}/hiredis/"
-      HIREDIS_LIB="${HOME}/hiredis/libhiredis.a"
-    else
+#    if test -f "${HOME}/hiredis/libhiredis.a" ; then :
+#      HIREDIS_INC="-I${HOME}/hiredis/"
+#      HIREDIS_LIB="${HOME}/hiredis/libhiredis.a"
+#    else
       pkg-config --exists hiredis
       if test "$?" -ne 1; then
-      HIREDIS_INC="`pkg-config --cflags hiredis` -I/usr/include/hiredis"
+      HIREDIS_INC="`pkg-config --cflags hiredis`"
       if test $SYSTEM = "FreeBSD" && $FREEBSD_VERSION != "15"; then
 	dnl> Note: on freebsd 15 .a is not installed
         HIREDIS_LIB="/usr/local/lib/libhiredis.a"
@@ -555,7 +555,7 @@ AS_VAR_IF(with_hiredis, yes, [
       echo "Please install hiredis package prerequisite"
       exit -1
       fi
-   fi
+#   fi
 ])
 
 if test "${with_nedge+set}" != set; then
@@ -870,8 +870,8 @@ fi
 
 PWD=${HERE}
 AC_DEFINE_UNQUOTED(PACKAGE_RELEASE, "r$GIT_RELEASE", [GIT release of this package])
-AC_DEFINE_UNQUOTED(PACKAGE_MACHINE, "$MACHINE", [Architecture of this host])
-AC_DEFINE_UNQUOTED(PACKAGE_OS, "${OS}", [OS Name])
+AC_DEFINE_UNQUOTED(PACKAGE_MACHINE, "${ARCH}", [Architecture of this host])
+AC_DEFINE_UNQUOTED(PACKAGE_OS, "Linux", [OS Name])
 AC_SUBST(PWD)
 AC_SUBST(MACHINE)
 AC_SUBST(SYSTEM)
--- a/Makefile.in
+++ b/Makefile.in
@@ -32,7 +32,7 @@ MONGOOSE_INC=-I$(MONGOOSE_HOME)
 LUA_PLATFORM=generic
 LUA_HOME=${PWD}/third-party/lua-5.4.6
 LUA_INC=-I$(LUA_HOME)/src
-LUA_LIB=$(LUA_HOME)/src/liblua.a
+LUA_LIB=-llua5.4
 
 ifeq ($(OS),Linux)
 	LUA_PLATFORM=linux
@@ -151,14 +151,12 @@ test_alert_engine: $(OBJECTS_NO_MAIN) $(
 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) $(OBJECTS_NO_MAIN) -Wall $(LIBS) -o $@
 
 $(LUA_LIB):
-	$(MAKE) -C $(LUA_HOME) $(LUA_PLATFORM)
 
 $(ZEROMQ_LIB):
 	cd $(ZEROMQ_HOME); ./configure --without-documentation --without-libsodium; $(MAKE)
 
 # --disable-rrd_graph
 $(LIBRRDTOOL_LIB):
-	cd $(LIBRRDTOOL_HOME); ./configure --disable-libdbi --disable-libwrap --disable-rrdcgi --disable-libtool-lock --disable-nls --disable-rpath --disable-perl --disable-ruby --disable-lua --disable-tcl --disable-python --disable-dependency-tracking --disable-rrd_graph ; cd src; $(MAKE) librrd_th.la
 
 hooks/.enabled:
 	git config core.hooksPath hooks || true
