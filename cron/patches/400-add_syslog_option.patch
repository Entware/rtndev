--- a/globals.h
+++ b/globals.h
@@ -64,6 +64,10 @@ XTRN int	LineNumber INIT(0);
 XTRN time_t	StartTime INIT(0);
 XTRN int	NoFork INIT(0);
 
+#ifdef SYSLOG
+XTRN int	SyslogOutput;
+#endif
+
 #if DEBUGGING
 XTRN int	DebugFlags INIT(0);
 XTRN const char *DebugFlagNames[]
--- a/misc.c
+++ b/misc.c
@@ -517,6 +517,8 @@ log_it(const char *username, PID_T xpid,
 #endif /*LOG_FILE*/
 
 #if defined(SYSLOG)
+	if (!SyslogOutput)
+		return;
 	if (!syslog_open) {
 # ifdef LOG_DAEMON
 		openlog(ProgramName, LOG_PID, FACILITY);
@@ -545,6 +547,8 @@ log_close(void) {
 		LogFD = ERR;
 	}
 #if defined(SYSLOG)
+	if (!SyslogOutput)
+		return;
 	closelog();
 	syslog_open = FALSE;
 #endif /*SYSLOG*/
--- a/cron.c
+++ b/cron.c
@@ -47,8 +47,11 @@ static	long			GMToff;
 static void
 usage(void) {
 	const char **dflags;
-
+#if defined(SYSLOG)
+	fprintf(stderr, "usage:  %s [-n] [-s] [-x [", ProgramName);
+#else
 	fprintf(stderr, "usage:  %s [-n] [-x [", ProgramName);
+#endif
 	for (dflags = DebugFlagNames; *dflags; dflags++)
 		fprintf(stderr, "%s%s", *dflags, dflags[1] ? "," : "]");
 	fprintf(stderr, "]\n");
@@ -70,6 +73,10 @@ main(int argc, char *argv[]) {
 	setlinebuf(stderr);
 #endif
 
+#if defined(SYSLOG)
+	SyslogOutput = 0;
+#endif
+
 	NoFork = 0;
 	parse_args(argc, argv);
 
@@ -434,7 +441,7 @@ static void
 parse_args(int argc, char *argv[]) {
 	int argch;
 
-	while (-1 != (argch = getopt(argc, argv, "nx:"))) {
+	while (-1 != (argch = getopt(argc, argv, "nsx:"))) {
 		switch (argch) {
 		default:
 			usage();
@@ -445,6 +452,11 @@ parse_args(int argc, char *argv[]) {
 		case 'n':
 			NoFork = 1;
 			break;
+#if defined(SYSLOG)
+		case 's':
+			SyslogOutput = 1;
+			break;
+#endif
 		}
 	}
 }
