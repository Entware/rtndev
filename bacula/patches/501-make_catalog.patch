--- a/src/cats/make_catalog_backup.in
+++ b/src/cats/make_catalog_backup.in
@@ -60,7 +60,7 @@ rm -f $1.sql
 
 case ${db_type} in
   sqlite3)
-    BINDIR=@SQLITE_BINDIR@
+    BINDIR=/opt/bin
     echo ".dump" | ${BINDIR}/sqlite3 $1.db >$1.sql
     ;;
   mysql)
--- a/src/cats/make_catalog_backup.pl.in
+++ b/src/cats/make_catalog_backup.pl.in
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/opt/bin/perl
 #
 # Author: Eric Bollengier, Copyright, 2006-2017
 # License: BSD 2-Clause; see file LICENSE-FOSS
@@ -29,11 +29,11 @@ if ($cat eq '-m') {
 
 my $dir_conf='@sbindir@/dbcheck -B -c @sysconfdir@/bacula-dir.conf';
 my $wd = "@working_dir@";
-
+# print $dir_conf;
 sub dump_sqlite3
 {
     my %args = @_;
-
+#   print "starting sqlite dump";
     exec("echo .dump | sqlite3 '$wd/$args{db_name}.db' > '$wd/$args{db_name}.sql'");
     print "Error while executing sqlite dump $!\n";
     return 1;
@@ -141,19 +141,19 @@ sub handle_catalog
 	$wd = $args{working_dir};
     }
     if ($args{db_type} eq 'SQLite3') {
-        $ENV{PATH}="@SQLITE_BINDIR@:$ENV{PATH}";
+        $ENV{PATH}="/opt/bin:$ENV{PATH}";
         if ($mode eq 'dump') {
             dump_sqlite3(%args);
         }
     } elsif ($args{db_type} eq 'PostgreSQL') {
-        $ENV{PATH}="@POSTGRESQL_BINDIR@:$ENV{PATH}";
+        $ENV{PATH}="/opt/bin:$ENV{PATH}";
         if ($mode eq 'dump') {
             dump_pgsql(%args);
         } else {
             analyse_pgsql(%args);
         }
     } elsif ($args{db_type} eq 'MySQL') {
-        $ENV{PATH}="@MYSQL_BINDIR@:$ENV{PATH}";
+        $ENV{PATH}="/opt/bin:$ENV{PATH}";
         if ($mode eq 'dump') {
             dump_mysql(%args);
         } else {
