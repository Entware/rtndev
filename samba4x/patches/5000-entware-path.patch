--- a/auth/credentials/credentials_krb5.c
+++ b/auth/credentials/credentials_krb5.c
@@ -458,7 +458,7 @@ static int cli_credentials_new_ccache(st
 		must_free_cc_name = true;
 
 		if (lpcfg_parm_bool(lp_ctx, NULL, "credentials", "krb5_cc_file", false)) {
-			ccache_name = talloc_asprintf(ccc, "FILE:/tmp/krb5_cc_samba_%u_%p", 
+			ccache_name = talloc_asprintf(ccc, "FILE:/opt/tmp/krb5_cc_samba_%u_%p", 
 						      (unsigned int)getpid(), ccc);
 		} else {
 			ccache_name = talloc_asprintf(ccc, "MEMORY:%p", 
--- a/lib/util/util.c
+++ b/lib/util/util.c
@@ -56,7 +56,7 @@ _PUBLIC_ const char *tmpdir(void)
 	char *p;
 	if ((p = getenv("TMPDIR")))
 		return p;
-	return "/tmp";
+	return "/opt/tmp";
 }
 
 
--- a/source3/client/smbspool_krb5_wrapper.c
+++ b/source3/client/smbspool_krb5_wrapper.c
@@ -189,11 +189,11 @@ int main(int argc, char *argv[])
 		goto create_env;
 	}
 
-	snprintf(gen_cc, sizeof(gen_cc), "/tmp/krb5cc_%d", uid);
+	snprintf(gen_cc, sizeof(gen_cc), "/opt/tmp/krb5cc_%d", uid);
 
 	rc = lstat(gen_cc, &sb);
 	if (rc == 0) {
-		snprintf(gen_cc, sizeof(gen_cc), "FILE:/tmp/krb5cc_%d", uid);
+		snprintf(gen_cc, sizeof(gen_cc), "FILE:/opt/tmp/krb5cc_%d", uid);
 	} else {
 		snprintf(gen_cc, sizeof(gen_cc), "/run/user/%d/krb5cc", uid);
 
--- a/source3/rpc_server/srv_pipe.c
+++ b/source3/rpc_server/srv_pipe.c
@@ -75,11 +75,11 @@ static void dump_pdu_region(const char *
 	for (i = 1; i < 100; i++) {
 		if (v != -1) {
 			fname = talloc_asprintf(talloc_tos(),
-						"/tmp/%s_%d.%d.prs",
+						"/opt/tmp/%s_%d.%d.prs",
 						name, v, i);
 		} else {
 			fname = talloc_asprintf(talloc_tos(),
-						"/tmp/%s_%d.prs",
+						"/opt/tmp/%s_%d.prs",
 						name, i);
 		}
 		if (!fname) {
--- a/source3/smbd/process.c
+++ b/source3/smbd/process.c
@@ -1409,7 +1409,7 @@ static void smb_dump(const char *name, i
 	len = smb_len_tcp(data)+4;
 	for (i=1;i<100;i++) {
 		fname = talloc_asprintf(talloc_tos(),
-				"/tmp/%s.%d.%s",
+				"/opt/tmp/%s.%d.%s",
 				name,
 				i,
 				type ? "req" : "resp");
--- a/source3/winbindd/winbindd_pam.c
+++ b/source3/winbindd/winbindd_pam.c
@@ -549,11 +549,11 @@ static const char *generate_krb5_ccache(
 	if (uid != -1) {
 		if (strequal(type, "FILE")) {
 			gen_cc = talloc_asprintf(
-				mem_ctx, "FILE:/tmp/krb5cc_%d", uid);
+				mem_ctx, "FILE:/opt/tmp/krb5cc_%d", uid);
 		}
 		if (strequal(type, "WRFILE")) {
 			gen_cc = talloc_asprintf(
-				mem_ctx, "WRFILE:/tmp/krb5cc_%d", uid);
+				mem_ctx, "WRFILE:/opt/tmp/krb5cc_%d", uid);
 		}
 		if (strequal(type, "KEYRING")) {
 			gen_cc = talloc_asprintf(
--- a/source4/heimdal/lib/krb5/expand_path.c
+++ b/source4/heimdal/lib/krb5/expand_path.c
@@ -291,7 +291,7 @@ _expand_temp_folder(krb5_context context
     if (p)
 	*ret = strdup(p);
     else
-	*ret = strdup("/tmp");
+	*ret = strdup("/opt/tmp");
     if (*ret == NULL)
 	return ENOMEM;
     return 0;
--- a/source4/heimdal/lib/krb5/krb5.h
+++ b/source4/heimdal/lib/krb5/krb5.h
@@ -351,7 +351,7 @@ struct krb5_cc_ops;
 #ifdef KRB5_USE_PATH_TOKENS
 #define KRB5_DEFAULT_CCFILE_ROOT "%{TEMP}/krb5cc_"
 #else
-#define KRB5_DEFAULT_CCFILE_ROOT "/tmp/krb5cc_"
+#define KRB5_DEFAULT_CCFILE_ROOT "/opt/tmp/krb5cc_"
 #endif
 
 #define KRB5_DEFAULT_CCROOT "FILE:" KRB5_DEFAULT_CCFILE_ROOT
--- a/source4/heimdal/lib/krb5/krb5_locl.h
+++ b/source4/heimdal/lib/krb5/krb5_locl.h
@@ -303,7 +303,7 @@ typedef struct krb5_context_data {
 } krb5_context_data;
 
 #ifndef KRB5_USE_PATH_TOKENS
-#define KRB5_DEFAULT_CCNAME_FILE "FILE:/tmp/krb5cc_%{uid}"
+#define KRB5_DEFAULT_CCNAME_FILE "FILE:/opt/tmp/krb5cc_%{uid}"
 #else
 #define KRB5_DEFAULT_CCNAME_FILE "FILE:%{TEMP}/krb5cc_%{uid}"
 #endif
--- a/.ycm_extra_conf.py
+++ b/.ycm_extra_conf.py
@@ -48,6 +48,7 @@ flags = [
     '-DAD_DC_BUILD_IS_ENABLED=1',
     '-DHAVE_IPV6=1',
     '-I/usr/local/include',
+    '-I$(STAGING_DIR)/opt/include',
     '-I.',
     '-Iauth',
     '-Iauth/credentials',
--- a/source3/modules/wscript_build
+++ b/source3/modules/wscript_build
@@ -222,30 +222,9 @@ bld.SAMBA3_MODULE('vfs_zfsacl',
                  internal_module=bld.SAMBA3_IS_STATIC_MODULE('vfs_zfsacl'),
                  enabled=bld.SAMBA3_IS_ENABLED_MODULE('vfs_zfsacl'))
 
-xdr_buf_hack = 'sed -e "s@^\([ \t]*register int32_t \*buf\);@\\1 = buf;@"'
-
-bld.SAMBA_GENERATOR('nfs41acl-xdr-c',
-                    source='nfs41acl.x',
-                    target='nfs41acl_xdr.c',
-                    rule='rpcgen -c ${SRC} | ' + xdr_buf_hack + ' > ${TGT}')
-
-bld.SAMBA_GENERATOR('nfs41acl-h',
-                    source='nfs41acl.x',
-                    target='nfs41acl.h',
-                    rule='rpcgen -h ${SRC} > ${TGT}')
-
-vfs_nfs4acl_xattr_source = '''
-                           vfs_nfs4acl_xattr.c
-                           nfs4acl_xattr_ndr.c
-                           nfs4acl_xattr_xdr.c
-                           '''
-
-if bld.CONFIG_SET("HAVE_RPC_XDR_H"):
-    vfs_nfs4acl_xattr_source += ' nfs41acl_xdr.c'
-
 bld.SAMBA3_MODULE('vfs_nfs4acl_xattr',
                   subsystem='vfs',
-                  source=vfs_nfs4acl_xattr_source,
+                  source='vfs_nfs4acl_xattr.c',
                   deps='NFS4_ACLS sunacl NDR_NFS4ACL',
                   init_function='',
                   internal_module=bld.SAMBA3_IS_STATIC_MODULE('vfs_nfs4acl_xattr'),
